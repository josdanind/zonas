version: '3.11.4'

services:
  bot:
    container_name: bot
    build:
      context: ./services/bot
      dockerfile: Dockerfile.dev
    command: [ "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "${BOT_PORT}", "--reload"]
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=zonas"
      - "traefik.http.services.bot.loadbalancer.server.port=${BOT_PORT}"
      - "traefik.http.routers.bot-http.entrypoints=http"
      - "traefik.http.routers.bot-http.rule=Host(`${BOT_DOMAIN_DEV}`)"
    volumes:
      - ./services/bot:/bot
    environment:
      - TZ=America/Bogota
      - DEVELOPMENT_MODE=true
      - BOT_DOMAIN=${BOT_DOMAIN_DEV}
      - BOT_PORT=${BOT_PORT}
      - BOT_TOKEN=${BOT_TOKEN}
      - NGROK_TOKEN=${NGROK_TOKEN}
    networks:
      - zonas

  db:
    image: postgres:16.0
    restart: always
    volumes:
      - db_zonas:/var/lib/postgresql/data/
      - ./scripts/db-init_sql.sh:/docker-entrypoint-initdb.d/db-init_sql.sh
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.services.db.loadbalancer.server.port=5432"
      - "traefik.tcp.routers.db.entrypoints=postgres"
      # - "traefik.tcp.routers.db.service=postgres"
      # Redirige todo lo que traefik recibe en el puerto 5433
      # al contenedor de postgres por el puerto 5432
      - "traefik.tcp.routers.db.rule=HostSNI(`*`)"
    environment:
      - POSTGRES_PASS$WORD={DB_PASS}
      - POSTGRES_USER=${DB_USER}
      - TZ=America/Bogota
      # Databases
      - DB_ZONAS=${DB_ZONAS}
    networks:
      - zonas
volumes:
  db_zonas:

networks:
  zonas:
    external: true