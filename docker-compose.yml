version: '3.11.4'

services:
  bot:
    container_name: bot
    build:
      context: ./services/bot
    command: [ "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "${BOT_PORT}"]
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.bot.loadbalancer.server.port=${BOT_PORT}"
      # Hace que traefik use el dominio con HTTP
      - "traefik.http.routers.bot-http.entrypoints=http"
      - "traefik.http.routers.bot-http.rule=Host(`${BOT_DOMAIN}`)"
      # Hace que traefik use el dominio con HTTPS
      - "traefik.http.routers.bot-https.entrypoints=https"
      - "traefik.http.routers.bot-https.rule=Host(`${BOT_DOMAIN}`)"
      - "traefik.http.routers.bot-https.tls=true"
      # Usa la configuracion "letsencrypt" para la generacion de los certificados
      - "traefik.http.routers.bot-https.tls.certresolver=letsencrypt"
      # Crea el middleware https-redirect para redireccionar HTTP to HTTPS
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.https-redirect.redirectscheme.permanent=true"
      # Usa el middleware para redireccionar HTTP a HTTPS
      - "traefik.http.routers.bot-http.middlewares=https-redirect"
    environment:
      - TZ=America/Bogota
      - DEVELOPMENT_MODE=false
      - BOT_DOMAIN=${BOT_DOMAIN}
      - BOT_PORT=${BOT_PORT}
      - BOT_TOKEN=${BOT_TOKEN}
      - NGROK_TOKEN=${NGROK_TOKEN}
    networks:
      - zonas

  db:
    image: postgres:16.0
    restart: always
    volumes:
      - db_zonas:/var/lib/postgresql/data/
      - ./scripts/db-init_sql.sh:/docker-entrypoint-initdb.d/db-init_sql.sh
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.services.db.loadbalancer.server.port=5432"
      - "traefik.tcp.routers.db.entrypoints=postgres"
      # Redirige todo lo que traefik recibe en el puerto 5432
      # al contenedor de postgres por el puerto 5432
      - "traefik.tcp.routers.db.rule=HostSNI(`*`)"
    environment:
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_USER=${DB_USER}  
      # Databases
      - DB_ZONAS=${DB_ZONAS}
    networks:
      - zonas

networks:
  zonas:
    external: true

volumes:
  db_zonas:
