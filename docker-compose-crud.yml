services:
  api-crud:
    container_name: crud
    build:
      context: ./services/api_crud
    command: ["./scripts/wait-for-it.sh", "db:5432", "--", "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "${CRUD_PORT}"]
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.api-crud.loadbalancer.server.port=${CRUD_PORT}"
      # Hace que traefik use el dominio con HTTP
      - "traefik.http.routers.api-crud-http.entrypoints=http"
      - "traefik.http.routers.api-crud-http.rule=Host(`${CRUD_DOMAIN}`)"
      # Hace que traefik use el dominio con HTTPS
      - "traefik.http.routers.api-crud-https.entrypoints=https"
      - "traefik.http.routers.api-crud-https.rule=Host(`${CRUD_DOMAIN}`)"
      - "traefik.http.routers.api-crud-https.tls=true"
      # Usa la configuracion "letsencrypt" para la generacion de los certificados
      - "traefik.http.routers.api-crud-https.tls.certresolver=letsencrypt"
      # Crea el middleware https-redirect para redireccionar HTTP to HTTPS
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.https-redirect.redirectscheme.permanent=true"
      # Usa el middleware para redireccionar HTTP a HTTPS
      - "traefik.http.routers.api-crud-http.middlewares=https-redirect"
      # Middleware admin-auth para utenticarse con el dashboard
      # Usando las variables de entorno USERNAME y HASHED_PASSWORD
      - "traefik.http.middlewares.admin-auth.basicauth.users=${TRAEFIK_USER?Varialbe not set}:${TRAEFIK_HASHED_PASSWORD?Varialbe not set}"
      - "traefik.http.routers.api-crud-https.middlewares=admin-auth"
    volumes:
      - ./db_init:/api_crud/db_init
    environment:
      - TZ=America/Bogota
      - DEVELOPMENT_MODE=false
      - BOT_DOMAIN=${CRUD_DOMAIN}
      - BOT_PORT=${CRUD_PORT}
      # URL to Databases
      - DB_HIC_CIBUS_URL=postgresql://${DB_USER}:${DB_PASS}@db:${DB_PORT}/${DB_HIC_CIBUS}
      - DB_BOTS_URL=postgresql://${DB_USER}:${DB_PASS}@db:${DB_PORT}/${DB_BOTS}
      # Administrator credentials
      - ADMIN_USERNAME=${ADMIN_USERNAME}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - ADMIN_NAME=${ADMIN_NAME}
    networks:
      - hic-cibus

  db:
    image: postgres:16.0
    restart: always
    volumes:
      - db_hic_cibus:/var/lib/postgresql"postgresql"/data/
      - ./scripts/db-init_sql.sh:/docker-entrypoint-initdb.d/db-init_sql.sh
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.db.entrypoints=postgres"
      # El enrutador "db" dirige el tráfico al servicio
      # interno con nombre "postgresql"
      - "traefik.tcp.routers.db.service=postgresql"
      # Define el puerto del servicio que traefik debe usar cuando envía
      # el tráfico al servio "postgresql"
      - "traefik.tcp.services.postgresql.loadbalancer.server.port=5432"
      # Redirige todo lo que traefik recibe en el puerto 5432
      # hacia el contenedor de postgres por el puerto 5432
      - "traefik.tcp.routers.db.rule=HostSNI(`*`)"
    environment:
      - TZ=America/Bogota
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      # Databases
      - DB_HIC_CIBUS=${DB_HIC_CIBUS}
      - DB_BOTS=${DB_BOTS}
    networks:
      - hic-cibus

volumes:
  db_hic_cibus:

networks:
  hic-cibus:
    external: true